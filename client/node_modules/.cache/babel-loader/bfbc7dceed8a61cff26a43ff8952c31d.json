{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"Firing fetchCollectionsAsync\");\n  const collectionRef = firestore.collection(\"collections\");\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionsMap));\n  }).catch(err => dispatch(fetchCollectionsFailure(err.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:\\Users\\abegi\\Desktop\\CompleteReactDeveloper\\crwn-clothing\\src\\redux\\shop\\shop.sagas.js"],"names":["takeEvery","firestore","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","convertCollectionSnapshotToMap","dispatch","fetchCollectionsSuccess","catch","err","fetchCollectionsFailure","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,8BAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChB,UAAMC,cAAc,GAAGC,8BAA8B,CAACF,QAAD,CAArD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,cAAD,CAAxB,CAAR;AACD,GALH,EAMGI,KANH,CAMSC,GAAG,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,GAAG,CAACE,OAAL,CAAxB,CANxB;AAOD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,SAAS,CACbE,eAAe,CAACkB,uBADH,EAEbjB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\r\nimport { firestore } from \"../../firebase/firebase.utils\";\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log(\"Firing fetchCollectionsAsync\");\r\n\r\n  const collectionRef = firestore.collection(\"collections\");\r\n\r\n  collectionRef\r\n    .get()\r\n    .then(snapshot => {\r\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    })\r\n    .catch(err => dispatch(fetchCollectionsFailure(err.message)));\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}