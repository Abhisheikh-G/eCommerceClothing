{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\abegi\\\\Desktop\\\\CompleteReactDeveloper\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\abegi\\\\Desktop\\\\CompleteReactDeveloper\\\\crwn-clothing\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\abegi\\\\Desktop\\\\CompleteReactDeveloper\\\\crwn-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport \"./sign-in.styles.scss\";\n\nconst SignIn = props => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const emailSignInStart = props.emailSignInStart;\n    const email = userCredentials.email,\n          password = userCredentials.password;\n    emailSignInStart(email, password);\n  };\n\n  handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n  const googleSignInStart = props.googleSignInStart;\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    handleChange: this.handleChange,\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    handleChange: this.handleChange,\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:\\Users\\abegi\\Desktop\\CompleteReactDeveloper\\crwn-clothing\\src\\components\\sign-in\\sign-in.component.jsx"],"names":["React","useState","connect","googleSignInStart","emailSignInStart","FormInput","CustomButton","SignIn","props","email","password","userCredentials","setCredentials","handleSubmit","e","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,iBADF,EAEEC,gBAFF,QAGO,+BAHP;AAIA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAO,uBAAP;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA,oBACoBP,QAAQ,CAAC;AACjDQ,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,QAAQ,EAAE;AAFuC,GAAD,CAD5B;AAAA;AAAA,QACfC,eADe;AAAA,QACEC,cADF;;AAMtBC,EAAAA,YAAY,GAAG,MAAMC,CAAN,IAAW;AACxBA,IAAAA,CAAC,CAACC,cAAF;AADwB,UAEhBX,gBAFgB,GAEKI,KAFL,CAEhBJ,gBAFgB;AAAA,UAGhBK,KAHgB,GAGIE,eAHJ,CAGhBF,KAHgB;AAAA,UAGTC,QAHS,GAGIC,eAHJ,CAGTD,QAHS;AAKxBN,IAAAA,gBAAgB,CAACK,KAAD,EAAQC,QAAR,CAAhB;AACD,GAND;;AAQAM,EAAAA,YAAY,GAAGF,CAAC,IAAI;AAAA,sBACMA,CAAC,CAACG,MADR;AAAA,UACVC,KADU,aACVA,KADU;AAAA,UACHC,IADG,aACHA,IADG;AAElBP,IAAAA,cAAc,mBAAMD,eAAN;AAAuB,OAACQ,IAAD,GAAQD;AAA/B,OAAd;AACD,GAHD;;AAdsB,QAmBdT,KAnBc,GAmBME,eAnBN,CAmBdF,KAnBc;AAAA,QAmBPC,QAnBO,GAmBMC,eAnBN,CAmBPD,QAnBO;AAAA,QAoBdP,iBApBc,GAoBQK,KApBR,CAoBdL,iBApBc;AAqBtB,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAIE;AAAM,IAAA,QAAQ,EAAE,KAAKU,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,YAAY,EAAE,KAAKG,YAFrB;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,KAAK,EAAEP,KALT;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,YAAY,EAAE,KAAKO,YAFrB;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,KAAK,EAAEN,QALT;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,YAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAEP,iBAFX;AAGE,IAAA,cAAc,EAAE,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CAnBF,CAJF,CADF;AAqCD,CA1DD;;AA4DA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACtClB,EAAAA,iBAAiB,EAAE,MAAMkB,QAAQ,CAAClB,iBAAiB,EAAlB,CADK;AAEtCC,EAAAA,gBAAgB,EAAE,CAACK,KAAD,EAAQC,QAAR,KAChBW,QAAQ,CAACjB,gBAAgB,CAAC;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAH4B,CAAL,CAAnC;;AAMA,eAAeR,OAAO,CACpB,IADoB,EAEpBkB,kBAFoB,CAAP,CAGbb,MAHa,CAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart\r\n} from \"../../redux/user/user.actions\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport \"./sign-in.styles.scss\";\r\n\r\nconst SignIn = props => {\r\n  const [userCredentials, setCredentials] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { emailSignInStart } = props;\r\n    const { email, password } = userCredentials;\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target;\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n  const { email, password } = userCredentials;\r\n  const { googleSignInStart } = props;\r\n  return (\r\n    <div className=\"sign-in\">\r\n      <h2>I already have an account</h2>\r\n      <span>Sign in with your email and password</span>\r\n\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormInput\r\n          name=\"email\"\r\n          handleChange={this.handleChange}\r\n          type=\"email\"\r\n          label=\"Email\"\r\n          value={email}\r\n          required\r\n        />\r\n\r\n        <FormInput\r\n          name=\"password\"\r\n          handleChange={this.handleChange}\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          value={password}\r\n          required\r\n        />\r\n\r\n        <div className=\"buttons\">\r\n          <CustomButton type=\"submit\">Sign In</CustomButton>\r\n          <CustomButton\r\n            type=\"button\"\r\n            onClick={googleSignInStart}\r\n            isGoogleSignIn={true}\r\n          >\r\n            Sign In With Google\r\n          </CustomButton>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}